import React from "react";
import React, { useEffect, useState } from "react"; // üëà –¥–æ–±–∞–≤–ª–µ–Ω React
import axios from "axios";

const ContextCheckStep = ({ onNext, setContextData }) => {
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // –ü–æ–ª—É—á–∞–µ–º contextKey –∏–∑ query-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  const getContextKeyFromUrl = () => {
    const params = new URLSearchParams(window.location.search);
    return params.get("contextKey");
  };

  useEffect(() => {
    const fetchContext = async () => {
      const contextKey = getContextKeyFromUrl();

      if (!contextKey) {
        setError("contextKey –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ URL");
        setLoading(false);
        return;
      }

      try {
        const response = await axios.get(
          `/api/app-ms-adapter/context/${contextKey}/employee`
        );

        const data = response.data;

        setContextData(data); // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤–µ—Å—å –æ—Ç–≤–µ—Ç (–≤–∫–ª—é—á–∞—è accountId –∏ settings)
        onNext(); // —Å—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
      } catch (err) {
        setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞");
        console.error(err);
      } finally {
        setLoading(false);
      }
    };

    fetchContext();
  }, []);

  if (loading) return <p className="text-gray-500">–ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç...</p>;
  if (error) return <p className="text-red-600">{error}</p>;

  return null; // –º—ã –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥, –∑–¥–µ—Å—å –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º
};

export default ContextCheckStep;
